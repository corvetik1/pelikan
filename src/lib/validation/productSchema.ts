import { z } from 'zod';

/**
 * Zod schema for validating Product create and update payloads.
 * NB: We validate only those fields that are accepted from the client.
 * Fields that are generated by the backend (id, createdAt) are optional and stripped.
 */
export const ProductBaseSchema = z.object({
  name: z.string().trim().min(1).max(256),
  slug: z
    .string()
    .trim()
    .min(1)
    .max(256)
    .optional(),
  price: z.number().positive(),
  weight: z.string().trim().min(1).max(64),
  category: z.string().trim().min(1).max(64),
  img: z.string().url().optional().or(z.literal('').optional()),
});

// For POST – all required except slug/img which are optional
export const ProductCreateSchema = ProductBaseSchema;

// For PATCH – allow partial updates, at least one field must be present
export const ProductUpdateSchema = ProductBaseSchema.partial().refine(
  (data) => Object.keys(data).length > 0,
  {
    message: 'At least one field must be provided for update',
  },
);

export type ProductCreateInput = z.infer<typeof ProductCreateSchema>;
export type ProductUpdateInput = z.infer<typeof ProductUpdateSchema>;
